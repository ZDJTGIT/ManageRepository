<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zd.manager.business.mapper.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.zd.manager.business.model.Project">
    <id column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="project_type" jdbcType="INTEGER" property="projectType" />
    <result column="project_address" jdbcType="VARCHAR" property="projectAddress" />
    <result column="weather_address" jdbcType="VARCHAR" property="weatherAddress" />
    <result column="project_longitude" jdbcType="VARCHAR" property="projectLongitude" />
    <result column="project_latitude" jdbcType="VARCHAR" property="projectLatitude" />
    <result column="project_begin_time" jdbcType="TIMESTAMP" property="projectBeginTime" />
    <result column="project_end_time" jdbcType="TIMESTAMP" property="projectEndTime" />
    <result column="project_status" jdbcType="INTEGER" property="projectStatus" />
    <result column="project_description" jdbcType="VARCHAR" property="projectDescription" />
    <result column="project_image_url" jdbcType="VARCHAR" property="projectImageUrl" />
  </resultMap>
  <sql id="Base_Column_List">
    project_id, project_name, project_type, project_address, weather_address, project_longitude, 
    project_latitude, project_begin_time, project_end_time, project_status, project_description, 
    project_image_url
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project
    where project_id = #{projectId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where project_id = #{projectId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zd.manager.business.model.Project">
    insert into project (project_id, project_name, project_type, 
      project_address, weather_address, project_longitude, 
      project_latitude, project_begin_time, project_end_time, 
      project_status, project_description, project_image_url
      )
    values (#{projectId,jdbcType=INTEGER}, #{projectName,jdbcType=VARCHAR}, #{projectType,jdbcType=INTEGER}, 
      #{projectAddress,jdbcType=VARCHAR}, #{weatherAddress,jdbcType=VARCHAR}, #{projectLongitude,jdbcType=VARCHAR}, 
      #{projectLatitude,jdbcType=VARCHAR}, #{projectBeginTime,jdbcType=TIMESTAMP}, #{projectEndTime,jdbcType=TIMESTAMP}, 
      #{projectStatus,jdbcType=INTEGER}, #{projectDescription,jdbcType=VARCHAR}, #{projectImageUrl,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zd.manager.business.model.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="projectType != null">
        project_type,
      </if>
      <if test="projectAddress != null">
        project_address,
      </if>
      <if test="weatherAddress != null">
        weather_address,
      </if>
      <if test="projectLongitude != null">
        project_longitude,
      </if>
      <if test="projectLatitude != null">
        project_latitude,
      </if>
      <if test="projectBeginTime != null">
        project_begin_time,
      </if>
      <if test="projectEndTime != null">
        project_end_time,
      </if>
      <if test="projectStatus != null">
        project_status,
      </if>
      <if test="projectDescription != null">
        project_description,
      </if>
      <if test="projectImageUrl != null">
        project_image_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null">
        #{projectType,jdbcType=INTEGER},
      </if>
      <if test="projectAddress != null">
        #{projectAddress,jdbcType=VARCHAR},
      </if>
      <if test="weatherAddress != null">
        #{weatherAddress,jdbcType=VARCHAR},
      </if>
      <if test="projectLongitude != null">
        #{projectLongitude,jdbcType=VARCHAR},
      </if>
      <if test="projectLatitude != null">
        #{projectLatitude,jdbcType=VARCHAR},
      </if>
      <if test="projectBeginTime != null">
        #{projectBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectEndTime != null">
        #{projectEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectStatus != null">
        #{projectStatus,jdbcType=INTEGER},
      </if>
      <if test="projectDescription != null">
        #{projectDescription,jdbcType=VARCHAR},
      </if>
      <if test="projectImageUrl != null">
        #{projectImageUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zd.manager.business.model.Project">
    update project
    <set>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null">
        project_type = #{projectType,jdbcType=INTEGER},
      </if>
      <if test="projectAddress != null">
        project_address = #{projectAddress,jdbcType=VARCHAR},
      </if>
      <if test="weatherAddress != null">
        weather_address = #{weatherAddress,jdbcType=VARCHAR},
      </if>
      <if test="projectLongitude != null">
        project_longitude = #{projectLongitude,jdbcType=VARCHAR},
      </if>
      <if test="projectLatitude != null">
        project_latitude = #{projectLatitude,jdbcType=VARCHAR},
      </if>
      <if test="projectBeginTime != null">
        project_begin_time = #{projectBeginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectEndTime != null">
        project_end_time = #{projectEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectStatus != null">
        project_status = #{projectStatus,jdbcType=INTEGER},
      </if>
      <if test="projectDescription != null">
        project_description = #{projectDescription,jdbcType=VARCHAR},
      </if>
      <if test="projectImageUrl != null">
        project_image_url = #{projectImageUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where project_id = #{projectId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zd.manager.business.model.Project">
    update project
    set project_name = #{projectName,jdbcType=VARCHAR},
      project_type = #{projectType,jdbcType=INTEGER},
      project_address = #{projectAddress,jdbcType=VARCHAR},
      weather_address = #{weatherAddress,jdbcType=VARCHAR},
      project_longitude = #{projectLongitude,jdbcType=VARCHAR},
      project_latitude = #{projectLatitude,jdbcType=VARCHAR},
      project_begin_time = #{projectBeginTime,jdbcType=TIMESTAMP},
      project_end_time = #{projectEndTime,jdbcType=TIMESTAMP},
      project_status = #{projectStatus,jdbcType=INTEGER},
      project_description = #{projectDescription,jdbcType=VARCHAR},
      project_image_url = #{projectImageUrl,jdbcType=VARCHAR}
    where project_id = #{projectId,jdbcType=INTEGER}
  </update>
  <select id="queryAll" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from project
  </select>
  <select id="queryProjectIdByName" resultType="java.lang.Integer">
  	select project_id from project where project_name in 
  	<foreach close=")" collection="list" item="item" open="(" separator=",">#{item}</foreach>
  </select>
  <select id="queryProjectWithSomething" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" />
  	from project order by ${sortFeild} ${order} limit #{start,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
  </select>
  <select id="queryProject" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" /> 
  	from project
  	<where>
  		<if test="projectType.length >0">and project_type in 
  			<foreach collection="projectType" item="projectType" index="index"
               open="(" close=")" separator=",">#{projectType}</foreach>
     	</if>
  		<if test="projectStatus.length >0">and project_status in 
  			<foreach collection="projectStatus" item="projectStatus" index="index"
               open="(" close=")" separator=",">#{projectStatus}</foreach>
     	</if>
     	<if test="projectId != null &amp;&amp; projectId !=''">
     		and project_id = #{projectId}  
     	</if>
     	<if test="projectName != null &amp;&amp; projectName !=''">
     		and project_name like concat('%',#{projectName},'%')  
     	</if>
     	<if test="projectType1 != null &amp;&amp; projectType1 !=''">
     		and project_type = #{projectType1}  
     	</if>
     	<if test="projectAddress != null &amp;&amp; projectAddress !=''">
     		and project_address like concat('%',#{projectAddress},'%')
     	</if>
     	<if test="projectStatus1 != null &amp;&amp; projectStatus1 !=''">
     		and project_status = #{projectStatus1}  
     	</if>
    </where>
  	<if test="sortField != null and sortOrder != null">order by ${sortField} ${sortOrder}</if>
  	limit #{start,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
  </select>
  <select id="queryTotal" resultType="java.lang.Integer">
  	select count(1) 
  	from project
  	<where>
  		<if test="projectType.length >0">and project_type in 
  			<foreach collection="projectType" item="projectType" index="index"
               open="(" close=")" separator=",">#{projectType}</foreach>
     	</if>
  		<if test="projectStatus.length >0">and project_status in 
  			<foreach collection="projectStatus" item="projectStatus" index="index"
               open="(" close=")" separator=",">#{projectStatus}</foreach>
     	</if>
     	<if test="projectId != null &amp;&amp; projectId !=''">
     		and project_id = #{projectId}  
     	</if>
     	<if test="projectName != null &amp;&amp; projectName !=''">
     		and project_name like concat('%',#{projectName},'%')  
     	</if>
     	<if test="projectType1 != null &amp;&amp; projectType1 !=''">
     		and project_type = #{projectType1}  
     	</if>
     	<if test="projectAddress != null &amp;&amp; projectAddress !=''">
     		and project_address like concat('%',#{projectAddress},'%') 
     	</if>
     	<if test="projectStatus1 != null &amp;&amp; projectStatus1 !=''">
     		and project_status = #{projectStatus1}  
     	</if>
    </where>
  </select>
</mapper>